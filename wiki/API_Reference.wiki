=Member Functions=
==Constructor==

{{{
FitJS_OAuth(callbackUrl, consumerKey, hashMethod)
}}}
*_Parameters:_*
|| callbackUrl || an URL for Fitbit API to callback once the user authorize the access to his/her data. The URL should match what's on record unless no record left on Fitbit.com.  This URL should write the token and verifier returned by Fitbit to database ||
||consumerKey||the consumer key string provided by Fitbit||
||hashMethod||FitJS currently *ONLY ACCEPTS HMAC-SHA1*. However, HMAC-SHA1, RSA-SHA1, PLAINTEXT will be supported in the future||
*_Return:_*
A initialized copy of Fitbit instance

*_Example:_*
{{{
    foauth=new FitJS_OAuth("http://example.com/oauthcomplete.php",  //callback url
                                "7c799999999999e8a149499999", //consumer key
                                "HMAC-SHA1" //hash method
                                );
}}}

==Signing a request==
===oauthBaseString (stage)===

*_Parameters:_*
||stage|| This is an Enum variable with two possible values: "request_token" and "access_token".  ||

*_Return:_*
The function will return a base string for generating signature string based on the type of request provided. 

*_Example:_*
{{{
var baseString=foauth.oauthBaseString("request_token");
var basestring=foauth.oauthBaseString("access_token");
}}}

---- 

{{{
oauthSignatureString (baseString)
}}}

*_Parameters:_*
||baseString|| Oauth request base string to generate signature. This string is generated by oauthBaseString() function||

*_Return:_*
A signature string by using HMAC-SHA1 

*_Example:_*
{{{
 var signature=foauth.oauthSignatureString(baseString);
}}}


==Requesting a temporary token==

{{{
requestToken (signature, async, onreadyStateChange)
}}}

*_Parameters:_*
||signature|| the signature string based on this request's base string||
||async|| whether this request is asynchronous||
||onreadyStateChange|| callback function for ready state change event. Only if the request is asynchronous, this function will called. ||

*_Return:_*
If the request is asynchronous, this function does not have return. If the function is synchronous, the return is a standard XMLHttpRequest

*_Example:_*
{{{
foauth.requestToken(signature, true, readyStategChange);  
}}}

==Authorizing Access==
Through the OAuth authorization process, user has to give your app the permission to access his/her data on Fitbit server. Thus, your app needs to either redirect the user to or use a pop-up window to allow the user access to fitbit.com/authorize. 

This function allows both pop-up and redirect, although using pop-up is highly recommended to preserve data in your javascript. 

{{{
authorize(usePopUp, locale, mobile, popupWidth, popupHeight)
}}}

*_Parameters:_*
||usePopUp|| whether the access to fitbit.com is through a pop-up or redirect||
||locale|| the locale of your pop-up ||
||mobile|| whether the user's access to fitbit.com is on a mobile device||
||popupWidth|| the width of your pop-up||
||popupHeight|| the heigh of your pop-up||

*_Return:_*
None

*_Example:_*
{{{
foauth.authorize(true, "en_US", false, 800, 500);
}}}

---- 
{{{
checkOAuthVerifier(interval, timeout, onTimedOut, onFinished, onFailed)
}}}

*_Parameters:_*
||interval|| ||
||timeout|| ||
||onTimedOut|| ||
||onFinished|| ||
||onFailed|| ||

*_Return:_*

*_Example:_*

---- 
{{{
stopCheckingOAuthVerifier()
}}}


*_Parameters:_*
N/A

*_Return:_*

*_Example:_*


==Accessing a token===
{{{
accessToken(signature, async, onreadyStateChange)
}}}

*_Parameters:_*
||signature|| ||
||async|| ||
||onreadyStateChange|| ||

*_Return:_*

*_Example:_*


=Member Variables=
   {{{
   url={
        request_token:"http://api.fitbit.com/oauth/request_token",
        access_token:"http://api.fitbit.com/oauth/access_token",        
        authorize:"https://www.fitbit.com/oauth/authenticate",
        verifier:"fitjs/oauthverifier.php",
        signature:'fitjs/oauthsignature.php',
        proxy:"fitjs/proxy.php"        
    }
}}}
---- 
    {{{
callbackUrl
}}}

---- 
{{{
    consumerKey
}}}

---- 
{{{
    hashMethod
}}}

---- 
{{{
    verifier
}}}

---- 
{{{
    token
}}}

---- 
{{{
    callbackConfirmed
}}}

---- 
{{{
    checkVerifier
}}}

---- 
{{{
    request_token_timestamp
}}}

---- 
{{{
    request_token_nonce
}}}

---- 
{{{
    access_token_timestamp
}}}

---- 
{{{
    access_token_nonce
}}}